name: CI

on:
  push:
    branches: main
  pull_request:
    branches: main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download stylish-haskell
        env:
          version: '0.15.1.0'
          toolname: stylish-haskell-v0.15.1.0-linux-x86_64
        run: |
          curl -L https://github.com/haskell/stylish-haskell/releases/download/v$version/$toolname.tar.gz -o shs.tar.gz

      - name: Unpack stylish-haskell
        env:
          version: '0.15.1.0'
          toolname: stylish-haskell-v0.15.1.0-linux-x86_64
        run: |
          tar -xf shs.tar.gz

      - name: ChMod stylish-haskell
        env:
          version: '0.15.1.0'
          toolname: stylish-haskell-v0.15.1.0-linux-x86_64
        run: |
          chmod +x $toolname/stylish-haskell

      - name: Run stylish-haskell
        env:
          version: '0.15.1.0'
          toolname: stylish-haskell-v0.15.1.0-linux-x86_64
        run: |
          git ls-files -z '*.hs' | xargs -P $$(nproc) -0 ./$toolname/stylish-haskell --inplace

      - name: Remove stylish-haskell
        env:
          version: '0.15.1.0'
          toolname: stylish-haskell-v0.15.1.0-linux-x86_64
        run: |
          rm -rf $toolname & rm $toolname.tar.gz

      - name: Auto-commit format
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: stylish-haskell auto-commit

      - name: Set up HLint
        uses: haskell-actions/hlint-setup@v2
        with:
          version: '3.1.6'

      - name: Run HLint
        uses: haskell-actions/hlint-run@v2
        with:
          path: '["src/", "test/"]'
          fail-on: warning

  build:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        ghc-version: ['9.12.2']
    steps:
      - uses: actions/checkout@v4

      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}

      - name: Configure the build
        run: |
          cabal configure -fdev --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      - name: Save cached dependencies
        uses: actions/cache/save@v4
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Run tests
        run: cabal test all

      - name: Check cabal file
        run: cabal check

      - name: Build documentation
        run: cabal haddock all --disable-documentation
